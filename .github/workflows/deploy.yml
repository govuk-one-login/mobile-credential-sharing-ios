name: iOS Deploy

on:
  push:
    branches: [main]

jobs:
  deploy:
    name: Deploy
    runs-on: macos-15
    steps:
      - name: Select Xcode version
        run: sudo xcode-select -s /Applications/Xcode_16.4.app

      - name: Add path globally
        run: echo "/usr/local/bin" >> $GITHUB_PATH

      - name: Checkout
        uses: actions/checkout@v5
        with:
          lfs: 'true'

      - name: Update fastlane
        run: |
          bundle update fastlane

      - name: Install and configure dependencies
        run: |
          brew update
          brew install sonar-scanner rbenv ruby-build

          rbenv init
          rbenv install 3.2.2
          rbenv global 3.2.2

      - name: Deploy to App Store Connect - Build
        env:
          LC_ALL: en_US.UTF-8
          LANG: en_US.UTF-8
          CONFIGURATION: Build
          AWS_SECRET_SIGNING_KEY_PASSWORD_ENCODED: ${{ secrets.AWS_SECRET_SIGNING_KEY_PASSWORD_ENCODED }}
          AWS_SECRET_DISTRIBUTION_P12_ENCODED: ${{ secrets.AWS_SECRET_DISTRIBUTION_P12_ENCODED }}
          AWS_SECRET_AUTH_KEY_P8_ENCODED: ${{ secrets.AWS_SECRET_AUTH_KEY_P8_ENCODED }}
        run: |-
          git_branch="${GITHUB_REF_NAME}"
          echo "Pushed to branch: ${git_branch}"

          export GEM_HOME="${HOME}/.gem"
          export GEM_PATH="${HOME}/.gem"

          # Fixes issue with bundle install
          eval "$(rbenv init - zsh)"
          bundle install

          # create variables
          CERTIFICATE_PATH="${RUNNER_TEMP}/distribution.p12"
          APIKEY_PATH="${RUNNER_TEMP}/apikey.p8"

          # import certificates from secrets
          echo -n "${AWS_SECRET_DISTRIBUTION_P12_ENCODED}" | base64 --decode -o "${CERTIFICATE_PATH}"
          echo -n "${AWS_SECRET_AUTH_KEY_P8_ENCODED}" | base64 --decode -o "${APIKEY_PATH}"

          AWS_SECRET_SIGNING_KEY_PASSWORD="$(echo -n "${AWS_SECRET_SIGNING_KEY_PASSWORD_ENCODED}" | base64 --decode)"

          bundle exec fastlane prerelease \
            "certificate_path:${CERTIFICATE_PATH}" \
            "certificate_password:${AWS_SECRET_SIGNING_KEY_PASSWORD}" \
            "apikey_path:${APIKEY_PATH}"